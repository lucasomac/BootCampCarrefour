CREATE OR REPLACE FUNCTION FUNC_SOMAR(INTEGER, INTEGER) RETURNS INTEGER
    SECURITY DEFINER CALLED ON NULL INPUT
    LANGUAGE sql AS
$$
SELECT COALESCE($1, 0) + COALESCE($2, 0)
$$;

SELECT FUNC_SOMAR(NULL, 3);

SELECT COALESCE(NULL, 'dANIEL');


CREATE OR REPLACE FUNCTION BANCOS_ADD(P_NUMERO INTEGER, P_NOME VARCHAR, P_ATIVO BOOLEAN)
    RETURNS INTEGER
    SECURITY INVOKER
    LANGUAGE plpgsql
    CALLED ON NULL INPUT
AS
$$
DECLARE
    VARIAVEL_ID INTEGER;
BEGIN
    IF P_NUMERO IS NULL OR P_NOME IS NULL OR P_ATIVO IS NULL THEN
        RETURN 0;
    end if;
    SELECT INTO VARIAVEL_ID numero
    FROM banco
    WHERE numero = P_NUMERO;

    IF VARIAVEL_ID IS NULL THEN
        INSERT INTO banco(NUMERO, NOME, ativo) VALUES (P_NUMERO, P_NOME, P_ATIVO);
    ELSE
        RETURN VARIAVEL_ID;
    end if;
    SELECT INTO VARIAVEL_ID numero
    FROM banco
    WHERE numero = P_NUMERO;
    RETURN VARIAVEL_ID;
END;
$$;

SELECT bancos_add('5433', 'BANCO NOVO', FALSE);


